{"version":3,"sources":[null,"webpack:///F:/台词猜英雄/guess_the_hero/components/Yumcc-DiDiProgress/index.vue?bc5f","webpack:///F:/台词猜英雄/guess_the_hero/components/Yumcc-DiDiProgress/index.vue?6cef","webpack:///F:/台词猜英雄/guess_the_hero/components/Yumcc-DiDiProgress/index.vue?3ed1","uni-app:///components/Yumcc-DiDiProgress/index.vue"],"names":[],"mappings":"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","file":"components/Yumcc-DiDiProgress/index.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=9bd6625e&scoped=true&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9bd6625e\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/Yumcc-DiDiProgress/index.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=template&id=9bd6625e&scoped=true&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"","<template>\r\n  <view style=\"position: relative;\">\r\n    <view style=\"width:100vw; min-height:70vw;\">\r\n      <canvas\r\n        :style=\"{ backgroundColor: canvasStyle.canvasBgColor }\"\r\n        style=\"position: absolute; z-index: 0; width: 100vw; min-height: 70vw;\"\r\n        canvas-id=\"progress\">\r\n      </canvas>\r\n    </view>\r\n   <view\r\n      :style=\"{ width: `${contentWidth}px`, maxHeight: radius + 'px', marginTop: -radius * 1.3 + 'px', left: `calc((100vw - ${contentWidth}px) / 2)` }\"\r\n      style=\"position: absolute;top: 70vw;z-index: 99999;\">\r\n      <slot/>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    computed: {\r\n      contentWidth: function () {\r\n        return this.radius * 1.5\r\n      }\r\n    },\r\n    props: {\r\n      // 配置数据\r\n      configureData: {\r\n        type: Array,\r\n        default: () => {\r\n          return [\r\n            {\r\n              percent: 5, // 百分比\r\n              label: '白银', // 文字(等级用)\r\n              num: 100 // 数值(显示用)\r\n            },\r\n            {\r\n              percent: 23,\r\n              label: '黄金',\r\n              num: 150\r\n            },\r\n            {\r\n              percent: 41,\r\n              label: '白金',\r\n              num: 300\r\n            },\r\n            {\r\n              percent: 59,\r\n              label: '钻石',\r\n              num: 800\r\n            },\r\n            {\r\n              percent: 77,\r\n              label: '黄金',\r\n              num: 1800\r\n            },\r\n            {\r\n              percent: 95,\r\n              label: '黑金',\r\n              num: 3800\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      // 最终百分比\r\n      currentPercent: {\r\n        type: Number,\r\n        default: 100\r\n      },\r\n      // canvas样式\r\n      canvasStyle: {\r\n        type: Object,\r\n        default: () => {\r\n          return {\r\n            canvasBgColor: '#333', // canvas背景颜色\r\n            percentText: { // 百分比文字样式\r\n              color: '#FFF',\r\n              fontSize: 13\r\n            },\r\n            configure: {\r\n              color: '#555', // 配置背景颜色\r\n              circleWidth: 5, // 配置背景圆圈半径\r\n              lineWidth: 4, // 配置背景圆线条的宽度\r\n            },\r\n            current: {\r\n              color: '#ff9411', // 最终背景颜色\r\n              circleWidth: 5, // 最终背景圆圈半径\r\n              lineWidth: 4, // 最终背景圆线条的宽度\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        process: 0.0, // 当前进度\r\n        circleX: 0, // 中心x坐标\r\n        circleY: 0, // 中心y坐标\r\n        radius: 0, // 圆环半径\r\n        ctx: null\r\n      }\r\n    },\r\n    methods: {\r\n      // 初始化\r\n      init () {\r\n        const screenWidth = uni.getSystemInfoSync().screenWidth\r\n        this.radius = (screenWidth / 2) * .7\r\n        this.circleX = screenWidth / 2\r\n        this.circleY = ((screenWidth) / 2)  * 1.1\r\n        this.ctx = uni.createCanvasContext('progress', this)\r\n        this.circleLoading = setInterval(() => {\r\n          this.loading()\r\n        }, 20)\r\n      },\r\n      // 绘制圆点旁边的数值文字\r\n      drawPercentText (x, y, str, num) {\r\n        // this.ctx.font = this.canvasStyle.percentText.fontSize + \"px April\"\r\n        // this.ctx.textAlign = \"center\"\r\n        // this.ctx.textBaseline = \"middle\"\r\n        // this.ctx.fillStyle = this.canvasStyle.percentText.color\r\n        // this.ctx.fillText(str, x, y)\r\n        // this.ctx.fillText(num, x, y + this.canvasStyle.percentText.fontSize + 3)\r\n      },\r\n      // 绘制圆点\r\n      drawSmallCircle (cx, cy, r, color) {\r\n        this.ctx.beginPath()\r\n        this.ctx.lineWidth = 1\r\n        this.ctx.fillStyle = color\r\n        this.ctx.arc(cx, cy, r, 0, Math.PI * 2)\r\n        this.ctx.fill()\r\n      },\r\n      // 绘制默认进度条\r\n      configureSector (cx, cy, r) {\r\n        this.ctx.beginPath()\r\n        this.ctx.lineWidth = this.canvasStyle.configure.lineWidth\r\n        this.ctx.strokeStyle = this.canvasStyle.configure.color\r\n        this.ctx.arc(cx, cy, r, Math.PI * 1, Math.PI * 2)\r\n        this.ctx.stroke()\r\n      },\r\n      // 绘制已完成进度条\r\n      currentSector (cx, cy, r, startAngle, endAngle, anti) {\r\n        this.ctx.beginPath()\r\n        this.ctx.lineWidth = this.canvasStyle.current.lineWidth\r\n        this.ctx.strokeStyle = this.canvasStyle.current.color\r\n        this.ctx.lineCap = \"round\"\r\n        this.ctx.arc(cx, cy, r, startAngle, Math.PI * (1 + endAngle / 100), false)\r\n        this.ctx.stroke()\r\n      },\r\n      // 刷新\r\n      loading () {\r\n        if (this.process >= this.currentPercent) {\r\n          clearInterval(this.circleLoading)\r\n        }\r\n\r\n        // 清除canvas内容\r\n        this.ctx.clearRect(0, 0, this.circleX * 2, this.circleY * 2)\r\n\r\n        // 绘制默认进度条\r\n        this.configureSector(this.circleX, this.circleY, this.radius)\r\n\r\n        // 绘制默认进度条圆点\r\n        for (let i of this.configureData) {\r\n          this.drawSmallCircle(\r\n            this.circleX + Math.sin(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * this.radius,\r\n            this.circleY + Math.cos(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * this.radius,\r\n            this.canvasStyle.configure.circleWidth,\r\n            this.canvasStyle.configure.color\r\n          )\r\n        }\r\n\r\n        // 绘制已完成进度条\r\n        this.currentSector(this.circleX, this.circleY, this.radius, Math.PI * 1, this.process)\r\n\r\n        // 绘制已完成进度条圆点和数值文字\r\n        for (let i of this.configureData) {\r\n          if (this.process >= i.percent) {\r\n            this.drawSmallCircle(\r\n              this.circleX + Math.sin(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * this.radius,\r\n              this.circleY + Math.cos(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * this.radius,\r\n              this.canvasStyle.current.circleWidth,\r\n              this.canvasStyle.current.color\r\n            )\r\n          }\r\n          this.drawPercentText(\r\n            this.circleX + Math.sin(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * (this.radius + 30),\r\n            this.circleY + Math.cos(((2 * Math.PI) / 360) * (-90 + -i.percent * 1.8)) * (this.radius + 30),\r\n            i.label,\r\n            i.num\r\n          )\r\n        }\r\n\r\n        // 控制结束时动画的速度\r\n        if (this.process / this.currentPercent > 0.9) {\r\n          this.process += 0.3\r\n        } else if (this.process / this.currentPercent > 0.8) {\r\n          this.process += 0.55\r\n        } else if (this.process / this.currentPercent > 0.7) {\r\n          this.process += 0.75\r\n        } else {\r\n          this.process += 1.0\r\n        }\r\n        this.ctx.draw(true, () => {\r\n          this.$emit('onFinish')\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\n"],"sourceRoot":""}